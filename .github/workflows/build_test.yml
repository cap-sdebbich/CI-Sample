name: Build & Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  Test:
    runs-on: macos-latest
    steps:
      # Sets Xcode version to 11.7
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '11.7'
      - uses: actions/checkout@v2
      # Runs unit tests
      # - name: Build for test
      #   run: xcodebuild -workspace CI-Sample.xcworkspace -scheme CI-Sample-Dev test -destination "platform=iOS Simulator,name=iPhone 11" -derivedDataPath ./Build -enableCodeCoverage YES
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.
      # Reports job status as a slack notification
      # - name: Report Status
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     fields: message,commit,author,ref,workflow,job
      #     custom_payload: |
      #       {
      #         attachments: [{
      #           color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
      #           text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
      #         }]
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      #   if: always()
      # - id: files
      #   if: github.event_name == 'pull_request'
      #   uses: jitterbit/get-changed-files@v1
      # - run: |
      #     count=0
      #     sum=0
      #     for changed_file in ${{ steps.files.outputs.all }}; do
      #       coverage=$(python script.py ${changed_file} CI-Sample/)
      #       if [ $coverage -lt -1 ]
      #       then
      #         echo ""
      #       else
      #         count=$((count+1))
      #         sum=$((sum+$coverage))
      #       fi
      #     done
      #     if [ $count -ge 1 ]
      #     then
      #       totalCoverage=$((sum / count))
      #       echo "total coverage ${totalCoverage}"
      #       export TOTALCOV=55
      #     fi
      - name: blabla
        if: github.event_name == 'pull_request'
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
          TOTAL_COV: 55
        run: echo "${{ env.TOTAL_COV }}"
      - name: Set code coverage commit status
        if: github.event_name == 'pull_request'
        uses: ouzi-dev/commit-status-updater@v1.1.0
        with:
          status: "error"
          url: http://myurl.io/
          description: "this is my status $env.TOTAL_COV check"
          name: "name of my status check"
        # uses: Sibz/github-status-action@v1
        # with:
        #   authToken: ${{secrets.GITHUB_TOKEN}}
        #   context: 'Code coverage'
        #   description: "coverage ${{ env.TOTAL_COV }}%"
        #   state: 'success'
        #   sha: ${{github.event.pull_request.head.sha || github.sha}}
